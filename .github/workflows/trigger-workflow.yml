name: Trigger Target Workflow

on:
  workflow_dispatch:

env:
  TF_ACTION_WORKING_DIR: "terraform"
  TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
  TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_aws_token_key: ${{ secrets.AWS_SESSION_TOKEN }} | base64 --decode
  TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
  TF_VAR_db_url: ${{ secrets.DB_URL }}
  TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  TF_VAR_mercado_pago_api_key: ${{ secrets.MERCADO_PAGO_API_KEY }}

jobs:
  trigger-job:
    runs-on: ubuntu-latest
    steps:
      - name: Perform trigger steps
        run: echo "Trigger job is setting things up!"

  call-lanchonete-auth:
    needs: trigger-job
    uses: fiap-9soat/fiap-lanchonete-auth/.github/workflows/target-workflow.yml@main
    with:
      message: "Hello from the main workflow!"
    secrets: inherit

  lanchonete-infra:
    needs: call-lanchonete-auth
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the terraform directory.
        working-directory: .

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.1

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

  call-lanchonete-db:
    needs: lanchonete-infra
    uses: fiap-9soat/fiap-lanchonete-db/.github/workflows/target-workflow.yml@develop
    with:
      message: "Hello from the main workflow!"
    secrets: inherit
